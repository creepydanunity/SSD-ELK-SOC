input {
  http_poller {
    urls => {
      otx_pulses => {
        method           => "get"
        url              => "https://otx.alienvault.com/api/v1/pulses/subscribed?limit=100"
        headers => {
          "X-OTX-API-KEY" => "07af3a46cbd66475aaecba02aa3b1218a7e36ba414edc60cc60d1a1389c2ae24"
        }
      }
    }
    codec           => "json"
    request_timeout => 60
    schedule        => { every => "5m" }
  }
}

filter {
  if [results] {
    ruby {
      init   => "require 'json'"
      code   => "
        @ipv4   ||= []
        @file   ||= []
        @domain ||= []
        @email  ||= []
        
        ipv4_indicators = []
        file_indicators = []
        domain_indicators = []
        email_indicators = []

        page = event.to_hash
        page['results'].each do |pulse|
          pulse['indicators'].each do |i|
            rec = {
              'indicator' => i['indicator'],
              'type'      => i['type'],
              'pulse_name'=> pulse['name'],
              'pulse_id'  => pulse['id']
            }
            case i['type']
              when 'IPv4'                then @ipv4   << rec
              when 'FileHash-MD5','FileHash-SHA1','FileHash-SHA256'
                                        then @file   << rec
              when 'domain','URL','hostname' then @domain << rec
              when 'email'               then @email  << rec
            end

            case i['type']
              when 'IPv4'                then ipv4_indicators   << rec
              when 'FileHash-MD5','FileHash-SHA1','FileHash-SHA256'
                                        then file_indicators   << rec
              when 'domain','URL','hostname' then domain_indicators << rec
              when 'email'               then email_indicators  << rec
            end
          end
        end

        @ipv4.each   {|i| event.set('[cache][ipv4]',   i); event.tag('cache_hit'); event.to_hash; yield; }
        @file.each   {|i| event.set('[cache][file]',   i); event.tag('cache_hit'); event.to_hash; yield; }
        @domain.each {|i| event.set('[cache][domain]', i); event.tag('cache_hit'); event.to_hash; yield; }
        @email.each  {|i| event.set('[cache][email]',  i); event.tag('cache_hit'); event.to_hash; yield; }
        
        event.set('indicators_ipv4', ipv4_indicators)
        event.set('indicators_file', file_indicators)
        event.set('indicators_domain', domain_indicators)
        event.set('indicators_email', email_indicators)

        event.cancel
      "
    }

    mutate {
      remove_field => [ "headers", "request", "response", "results", "next", "response_headers" ]
    }
  }
}

output {
  pipeline {
    send_to => ["backend_logs"]
  }

  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "threat-intel-otx-%{+YYYY.MM.dd}"
  }
}